/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "opencv2/opencv.hpp"
/* Header for class com_example_fabio_ndkopencvdepthscanner_OpencvNativeClass */

using namespace cv;
using namespace std;
#ifndef _Included_com_example_fabio_ndkopencvdepthscanner_OpencvNativeClass
#define _Included_com_example_fabio_ndkopencvdepthscanner_OpencvNativeClass
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_fabio_ndkopencvdepthscanner_OpencvNativeClass
 * Method:    crossingsDetection
 * Signature: (JJ)I
 */

void detect(Mat&, Mat&);
void symmetryTest(const vector<cv::DMatch>&, const vector<cv::DMatch>&, vector<cv::DMatch>&);
vector<Rect> collapse_double_rect(vector<Rect>);
vector<DMatch> getFeat(Ptr<Feature2D>, FlannBasedMatcher, Mat, Mat);
vector<pair<Rect, Rect> > correspondence(Mat, Mat, vector<Rect>, vector<Rect>, Ptr<Feature2D>, FlannBasedMatcher);
Point rectCenter(Rect);
bool myComparison(const pair<pair<int,int>, double> &, const pair<pair<int,int>, double> &);
int self_disparity_pixel(Mat, Rect);
double meanDistance(vector<DMatch>);


JNIEXPORT void JNICALL Java_com_example_fabio_ndkopencvdepthscanner_OpencvNativeClass_crossingsDetection
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
